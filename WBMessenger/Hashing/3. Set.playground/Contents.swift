import Foundation

//MARK: - 1. –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
var set : Set<Int> = [8, 44, 0, 78, 1, 100, 9999]

//MARK: - 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
set.insert(1) // –≤–∏–¥–∏–º, —á—Ç–æ –µ—â–µ –æ–¥–Ω–∞ 1 –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞—Å—å, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è
set.insert(25)
set.insert(99)

//MARK: - 3. –£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
set.remove(1)

//MARK: - 4. –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ
let number = 1
let check = set.contains(number)

print(check ? "üëç set contains \(number)\n" : "üëé set is not contains \(number)\n")

//MARK: - 5. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞—Ö
var anotherSet : Set<Int> = [0, 666, 8, 99, 100, 4]

let unionedSet = set.union(anotherSet) // —Å–µ—Ç—ã –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
print("Unioned set: \(unionedSet)\n")

let intersectedSet = set.intersection(anotherSet) // –≤ —Å–µ—Ç –¥–æ–±–∞–≤–∏–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤ –æ–±–æ–∏—Ö —Å–µ—Ç–∞—Ö
print("Intersected set: \(intersectedSet)\n")

let substractedSet = set.subtracting(anotherSet) // –≤ —Å–µ—Ç –¥–æ–±–∞–≤–∏–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤ –æ–±–æ–∏—Ö —Å–µ—Ç–∞—Ö
print("Substracted set: \(substractedSet)\n")
